%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% usage: b = bicubic(f, pos, H)
%
% Interpolación bicúbica
% ...

% Author: Tatiana L. G. <tatiana@sirius.utp.edu.co>
% Created: Apr 2 2013
% Version: 0.0.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
function b = bicubic(f, pos, H)
    
    DIM = 3;
    x = pos(:,1);
    y = pos(:,2);
    f = double(f);	
    
    %				    1  2  3  4 5 6 7  8 9 10 11 12 13 14 15 16 
    x1H = bsxfun(@plus, floor(x), [-1 -1 -1 -1  0 0 0 0  1 1  1  1  2  2  2  2 ]);
    y1  = bsxfun(@plus, floor(y), [-1  0  1  2 -1 0 1 2 -1 0  1  2 -1  0  1  2 ]);
    ix = (x1H-1)*H + y1;
     

    % Get RGB channels of 16 pixels
    p00 = f(ix(:, 1),:);
    p10 = f(ix(:, 2),:);
    p20 = f(ix(:, 3),:);
    p30 = f(ix(:, 4),:);
    p01 = f(ix(:, 5),:);
    p11 = f(ix(:, 6),:);
    p21 = f(ix(:, 7),:);
    p31 = f(ix(:, 8),:);
    p02 = f(ix(:, 9),:);
    p12 = f(ix(:,10),:);
    p22 = f(ix(:,11),:);
    p32 = f(ix(:,12),:);
    p03 = f(ix(:,13),:);
    p13 = f(ix(:,14),:);
    p23 = f(ix(:,15),:);
    p33 = f(ix(:,16),:);
%{    
    tmp = [p00 p01 p02 p03 
	   p10 p11 p12 p13
	   p20 p21 p22 p23
	   p30 p31 p32 p33]
%}

    % Find the 16 coeficients of the cubic polynom
    a00 = p11;
    a01 = .5 * (p12-p10);
    a02 = p10 - 2.5*p11 + 2*p12 - .5*p13;
    a03 = -.5 * (p10 - 3*p11 + 3*p12 - p13);
    a10 = -.5*p01 + .5*p21;
    a11 = .25*p00 - .25*p02 - .25*p20 + .25*p22;
    a12 = -.5*p00 + 1.25*p01 - p02 + .25*p03 + .5*p20 - 1.25*p21 + p22 - .25*p23;
    a13 = .25*p00 - .75*p01 + .75*p02 - .25*p03 - .25*p20 + .75*p21 - .75*p22 + .25*p23;
    a20 = p01 - 2.5*p11 + 2*p21 - .5*p31;
    a21 = -.5*p00 + .5*p02 + 1.25*p10 - 1.25*p12 - p20 + p22 + .25*p30 - .25*p32;
    a22 = p00 - 2.5*p01 + 2*p02 - .5*p03 - 2.5*p10 + 6.25*p11 - 5*p12 + 1.25*p13 + ...
	  2*p20 - 5*p21 + 4*p22 - p23 - .5*p30 + 1.25*p31 - p32 + .25*p33;
    a23 = -.5*p00 + 1.5*p01 - 1.5*p02 + .5*p03 + 1.25*p10 - 3.75*p11 + 3.75*p12 - ...
	  1.25*p13 - p20 + 3*p21 - 3*p22 + p23 + .25*p30 - .75*p31 + .75*p32 - .25*p33;
    a30 = -.5*p01 + 1.5*p11 - 1.5*p21 + .5*p31;
    a31 = .25*p00 - .25*p02 - .75*p10 + .75*p12 + .75*p20 - .75*p22 - .25*p30 + .25*p32;
    a32 = -.5*p00 + 1.25*p01 - p02 + .25*p03 + 1.5*p10 - 3.75*p11 + 3*p12 - .75*p13 - ...
	  1.5*p20 + 3.75*p21 - 3*p22 + .75*p23 + .5*p30 - 1.25*p31 + p32 - .25*p33;
    a33 = .25*p00 - .75*p01 + .75*p02 - .25*p03 - .75*p10 + 2.25*p11 - 2.25*p12 + .75*p13 + ...
	  .75*p20 - 2.25*p21 + 2.25*p22 - .75*p23 - .25*p30 + .75*p31 - .75*p32 + .25*p33;

    % Calculate exponential x's and y's to combine with the coeficients
    x = repmat(x - floor(x) , 1, 3);
    x2= x .* x;
    x3= x .* x2;

    y = repmat(y - floor(y), 1, 3);
    y2 = y .* y;
    y3 = y .* y2;

    % Evaluate the poly on x,y
    b = (a00 + a01.*y + a02.*y2 + a03.*y3) ;  + ...
	(a10 + a11.*y + a12.*y2 + a13.*y3) .* x + ...
	(a20 + a21.*y + a22.*y2 + a23.*y3) .* x2 + ...
	(a30 + a31.*y + a32.*y2 + a33.*y3) .* x3;

end
